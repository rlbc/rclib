source("http://bioconductor.org/biocLite.R")
install.packages("BiocManager")
BiocManager::install("polyester")
BiocManager::install("polyester")
q()
library(WGCNA)
q()
library(WGCNA)
install.packages("swirl")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
sessionInfo()
library(swirl)
library(ggplot2)
ggplot(data = diamonds) + geom_bar(mapping = aes(x = clarity))
ggplot(data = diamonds) + geom_bar(mapping = aes(x = clarity, fill = clarity))
ggplot(data = diamonds) + geom_bar(mapping = aes(x = clarity, fill = cut))
ggplot(data = diamonds) + geom_bar(mapping = aes(x = clarity, fill = cut)) + scale_fill_manual(values = c("red", "orange", "darkgreen", "dodgerblue", "purple4"))
ggplot(data = diamonds) + geom_bar(mapping = aes(x = clarity, fill = cut), position = "fill") + scale_fill_manual(values = c("red", "orange", "darkgreen", "dodgerblue", "purple4"))
ggplot(data = diamonds) + geom_bar(mapping = aes(x = clarity, fill = cut), position = "fill") + scale_fill_manual(values = c("red", "orange", "darkgreen", "dodgerblue", "purple4")) + labs(title = "Clearer diamonds tend to be of higher quality cut", subtitle = "The majority of IF diamonds are an \"Ideal\" cut")
?theme
ggplot(data = diamonds) + geom_bar(mapping = aes(x = clarity, fill = cut), position = "fill") + scale_fill_manual(values = c("red", "orange", "darkgreen", "dodgerblue", "purple4")) + labs(title = "Clearer diamonds tend to be of higher quality cut", subtitle = "The majority of IF diamonds are an \"Ideal\" cut") + theme_classic()
ggplot(data = diamonds) + geom_bar(mapping = aes(x = clarity, fill = cut), position = "fill") + scale_fill_manual(values = c("red", "orange", "darkgreen", "dodgerblue", "purple4")) + labs(title = "Clearer diamonds tend to be of higher quality cut", subtitle = "The majority of IF diamonds are an \"Ideal\" cut") + theme_gray()
ggplot(data = diamonds) + geom_bar(mapping = aes(x = clarity, fill = cut), position = "fill") + scale_fill_manual(values = c("red", "orange", "darkgreen", "dodgerblue", "purple4")) + labs(title = "Clearer diamonds tend to be of higher quality cut", subtitle = "The majority of IF diamonds are an \"Ideal\" cut") + theme_dark()
ggplot(data = diamonds) + geom_bar(mapping = aes(x = clarity, fill = cut), position = "fill") + scale_fill_manual(values = c("red", "orange", "darkgreen", "dodgerblue", "purple4")) + labs(title = "Clearer diamonds tend to be of higher quality cut", subtitle = "The majority of IF diamonds are an \"Ideal\" cut") + theme_minimal()
library(swirl)
swirl()
head(mpg)
ggplot(data = mpg) + geom_bar(mapping = aes(x = manufacturer, color = class))
ggplot(data = mpg) + geom_bar(mapping = aes(x = manufacturer, fill = class))
ggplot(data = df) + geom_bar(mapping = aes(x = manufacturer, fill = trans), position = dodge)
ggplot(data = df) + geom_bar(mapping = aes(x = manufacturer, fill = trans), position = "dodge")
ggplot(data = df) + geom_bar(mapping = aes(x = manufacturer, fill = trans), position = "dodge") + labs(title = "Transmissions by Manufacturer")
p
p + theme_classic()
p + theme_minimal()
p + theme_gray()
p + theme_bw()
p
p + theme_bw()
p
p + theme(axis.text = element_text(size = 14))
p
p + coord_flip()
q()
library(ggplot2)
df <- msleep
dim(df)
colnames(df)
str(df)
library(dplyr)
glimpse(df)
?sapply
sapply(df, function(x) sum(is.na(x)))
?function
sapply(df, function(x) sum(is.na(x)))/nrow(df)
install.packages("naniar")
library("naniar")
vis_miss(df)
ggplot(df, aes(sleep_total)) + geom_density()
mean(df$sleep_cycle)
mean(df$sleep_cycle, na.rm = TRUE)
median(df$sleep_cycle, na.rm = TRUE)
install.packages("skimr")
install.packages("skimr")
library("skimr")
skim(df)
if (!requireNamespace("BiocManager", quietly = TRUE)) {
install.packages("BiocManager")
}
BiocManager::install("recount")
BiocManager::install("Hmisc")
BiocManager::install("foreign")
install.packages("foreign")
BiocManager::install("Hmisc")
BiocManager::install("recount")
BiocManager::install("derfinder")
library("recount")
library("derfinder")
library("derfinderData")
BiocManager::install("derfinderData")
library("derfinderData")
library("GenomicRanges")
library(blogdown)
blogdown::serve_site()
?Rprofile
.libPaths()
install.packages("devtools")
setwd("~/Unesp/Doutorado/Genomica/hdac/")
setwd("~/Unesp/Doutorado/Genomica/hdac/rc05hdac")
library(devtools)
document()
load_all()
?calcrle
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/home/rstudio/")
library("tools")
library("dendextend")
library("preprocessCore")
library("sva")
# Brohl (final _b)
# Deixarei assim caso precise adicionar novos dados
samples_b <- read.csv(file.path("/home/rstudio/samples_brohl.csv"), header = TRUE, sep = ',')
